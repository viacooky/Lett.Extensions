{
  "api/Lett.Extensions.Exceptions.html": {
    "href": "api/Lett.Extensions.Exceptions.html",
    "title": "Lett.Extensions.Exceptions 命名空间 | Lett.Extensions website",
    "keywords": "Lett.Extensions.Exceptions 命名空间 类 DataTableException"
  },
  "api/Lett.Extensions.ObjectExtensions.html": {
    "href": "api/Lett.Extensions.ObjectExtensions.html",
    "title": "ObjectExtensions 类 | Lett.Extensions website",
    "keywords": "ObjectExtensions 类 object 扩展方法 - 比较 继承 System.Object ObjectExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class ObjectExtensions 方法 As<T>(Object) 对象强转换 声明 public static T As<T>(this object this) 参数 类型 名称 描述 System.Object this 返回 类型 描述 T 类型参数 名称 描述 T As<T>(Object, T) 对象强转换 声明 public static T As<T>(this object this, T defaultValue) 参数 类型 名称 描述 System.Object this T defaultValue 返回 类型 描述 T 类型参数 名称 描述 T As<T>(Object, Func<T>) 对象强转换 声明 public static T As<T>(this object this, Func<T> func) 参数 类型 名称 描述 System.Object this System.Func <T> func 返回 类型 描述 T 类型参数 名称 描述 T DeepClone<T>(T) 深复制 声明 public static T DeepClone<T>(this T this) 参数 类型 名称 描述 T this 返回 类型 描述 T 类型参数 名称 描述 T IsAssignableFrom(Object, Type) 查询 object 的 IsAssignableFrom 声明 public static bool IsAssignableFrom(this object this, Type targetType) 参数 类型 名称 描述 System.Object this System.Type targetType 返回 类型 描述 System.Boolean IsAssignableFrom<T>(Object) 查询 object 的 IsAssignableFrom 声明 public static bool IsAssignableFrom<T>(this object this) 参数 类型 名称 描述 System.Object this 返回 类型 描述 System.Boolean 类型参数 名称 描述 T IsDBNull(Object) 是否DBNull 声明 public static bool IsDBNull(this object this) 参数 类型 名称 描述 System.Object this 返回 类型 描述 System.Boolean To<T>(Object) 对象转换,失败则返回 func (泛型约束为实现了IConvertible的类型) 声明 public static T To<T>(this object this) where T : IConvertible 参数 类型 名称 描述 System.Object this 返回 类型 描述 T 类型参数 名称 描述 T 泛型约束为实现了IConvertible的类型(Boolean,Byte,Char,DateTime,System.DBNull,Decimal,Double,System.Enum,Int16,Int32,Int64,SByte,Single,String,UInt16,UInt32,UInt64 等) To<T>(Object, T) 对象转换,失败则返回 defaultValue (泛型约束为实现了IConvertible的类型) 声明 public static T To<T>(this object this, T defaultValue) where T : IConvertible 参数 类型 名称 描述 System.Object this T defaultValue 返回 类型 描述 T 类型参数 名称 描述 T 泛型约束为实现了IConvertible的类型(Boolean,Byte,Char,DateTime,System.DBNull,Decimal,Double,System.Enum,Int16,Int32,Int64,SByte,Single,String,UInt16,UInt32,UInt64 等) To<T>(Object, Func<T>) 对象转换,失败则返回 func (泛型约束为实现了IConvertible的类型) 声明 public static T To<T>(this object this, Func<T> func) where T : IConvertible 参数 类型 名称 描述 System.Object this System.Func <T> func 返回 类型 描述 T 类型参数 名称 描述 T 泛型约束为实现了IConvertible的类型(Boolean,Byte,Char,DateTime,System.DBNull,Decimal,Double,System.Enum,Int16,Int32,Int64,SByte,Single,String,UInt16,UInt32,UInt64 等)"
  },
  "api/Lett.Extensions.DataColumnCollectionExtensions.html": {
    "href": "api/Lett.Extensions.DataColumnCollectionExtensions.html",
    "title": "DataColumnCollectionExtensions 类 | Lett.Extensions website",
    "keywords": "DataColumnCollectionExtensions 类 DataColumnCollection 扩展方法 继承 System.Object DataColumnCollectionExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class DataColumnCollectionExtensions 方法 AddRange(DataColumnCollection, String[]) 批量增加 DataColumn 声明 public static void AddRange(this DataColumnCollection this, string[] columnNames) 参数 类型 名称 描述 System.Data.DataColumnCollection this System.String [] columnNames 列名数组"
  },
  "api/Lett.Extensions.EnumExtensions.html": {
    "href": "api/Lett.Extensions.EnumExtensions.html",
    "title": "EnumExtensions 类 | Lett.Extensions website",
    "keywords": "EnumExtensions 类 Enum 扩展方法 继承 System.Object EnumExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class EnumExtensions 方法 GetDescription(Enum) 获取枚举描述 需要在枚举中加入 Description 属性 [Description(\"xxx\")] 异常时 返回null 声明 public static string GetDescription(this Enum this) 参数 类型 名称 描述 System.Enum this 返回 类型 描述 System.String"
  },
  "api/Lett.Extensions.LongExtensions.html": {
    "href": "api/Lett.Extensions.LongExtensions.html",
    "title": "LongExtensions 类 | Lett.Extensions website",
    "keywords": "LongExtensions 类 long 扩展方法 - 比较 继承 System.Object LongExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class LongExtensions 方法 IsEven(Int64) 是否偶数 声明 public static bool IsEven(this long this) 参数 类型 名称 描述 System.Int64 this 返回 类型 描述 System.Boolean IsInRange(Int64, Int64, Int64) 是否在指定范围内 声明 public static bool IsInRange(this long this, long min, long max) 参数 类型 名称 描述 System.Int64 this System.Int64 min 最小值 System.Int64 max 最大值 返回 类型 描述 System.Boolean IsOdd(Int64) 是否奇数 声明 public static bool IsOdd(this long this) 参数 类型 名称 描述 System.Int64 this 返回 类型 描述 System.Boolean Times(Int64, Action) 执行次数操作，次数基于原 long 值 声明 public static void Times(this long this, Action action) 参数 类型 名称 描述 System.Int64 this 次数 System.Action action 执行的操作 Times(Int64, Action<Int64>) 执行次数操作，次数基于原 long 值 声明 public static void Times(this long this, Action<long> action) 参数 类型 名称 描述 System.Int64 this 次数 System.Action < System.Int64 > action 执行的操作(参数是从0开始的 index)"
  },
  "api/Lett.Extensions.ByteExtensions.html": {
    "href": "api/Lett.Extensions.ByteExtensions.html",
    "title": "ByteExtensions 类 | Lett.Extensions website",
    "keywords": "ByteExtensions 类 Bytes 扩展方法 - 转换 继承 System.Object ByteExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class ByteExtensions 方法 ToString(Byte[], Encoding) 转换为字符串 声明 public static string ToString(this byte[] this, Encoding encoding) 参数 类型 名称 描述 System.Byte [] this System.Text.Encoding encoding 编码格式 返回 类型 描述 System.String"
  },
  "api/Lett.Extensions.IEnumerableExtensions.html": {
    "href": "api/Lett.Extensions.IEnumerableExtensions.html",
    "title": "IEnumerableExtensions 类 | Lett.Extensions website",
    "keywords": "IEnumerableExtensions 类 IEnumerable 扩展方法 - 比较 继承 System.Object IEnumerableExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class IEnumerableExtensions 方法 ContainsAll<T>(IEnumerable<T>, IEnumerable<T>) 是否包含全部元素 声明 public static bool ContainsAll<T>(this IEnumerable<T> this, IEnumerable<T> items) 参数 类型 名称 描述 System.Collections.Generic.IEnumerable <T> this System.Collections.Generic.IEnumerable <T> items 需要进行判断的元素集合 返回 类型 描述 System.Boolean 类型参数 名称 描述 T ContainsAny<T>(IEnumerable<T>, IEnumerable<T>) 是否包含任一元素 声明 public static bool ContainsAny<T>(this IEnumerable<T> this, IEnumerable<T> items) 参数 类型 名称 描述 System.Collections.Generic.IEnumerable <T> this System.Collections.Generic.IEnumerable <T> items 需要进行判断的元素集合 返回 类型 描述 System.Boolean 类型参数 名称 描述 T IsNullOrEmpty<T>(IEnumerable<T>) 是否空或空集合 声明 public static bool IsNullOrEmpty<T>(this IEnumerable<T> this) 参数 类型 名称 描述 System.Collections.Generic.IEnumerable <T> this 返回 类型 描述 System.Boolean 类型参数 名称 描述 T"
  },
  "api/Lett.Extensions.StringExtensions.html": {
    "href": "api/Lett.Extensions.StringExtensions.html",
    "title": "StringExtensions 类 | Lett.Extensions website",
    "keywords": "StringExtensions 类 string 扩展方法 - 比较 继承 System.Object StringExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class StringExtensions 方法 Base64Decode(String) BASE64解码 ps: 转换失败返回NULL 声明 public static string Base64Decode(this string this) 参数 类型 名称 描述 System.String this 返回 类型 描述 System.String Base64Encode(String) BASE64编码 ps: 转换失败返回NULL 声明 public static string Base64Encode(this string this) 参数 类型 名称 描述 System.String this 返回 类型 描述 System.String ContainsAll(String, IEnumerable<String>, StringComparison) 是否全部包含，默认不区分大小写 声明 public static bool ContainsAll(this string this, IEnumerable<string> values, StringComparison comparisonType = StringComparison.CurrentCultureIgnoreCase) 参数 类型 名称 描述 System.String this 源字符串 System.Collections.Generic.IEnumerable < System.String > values 需要进行判断的字符串集合 System.StringComparison comparisonType 字符串比较规则 返回 类型 描述 System.Boolean ContainsAny(String, IEnumerable<String>, StringComparison) 是否包含任意一个，默认不区分大小写 声明 public static bool ContainsAny(this string this, IEnumerable<string> values, StringComparison comparisonType = StringComparison.CurrentCultureIgnoreCase) 参数 类型 名称 描述 System.String this 源字符串 System.Collections.Generic.IEnumerable < System.String > values 需要进行判断的字符串集合 System.StringComparison comparisonType 字符串比较规则 返回 类型 描述 System.Boolean Format(String, Object[]) 格式化 声明 public static string Format(this string this, params object[] args) 参数 类型 名称 描述 System.String this System.Object [] args 返回 类型 描述 System.String 示例 var tmp = \"{0}-{1}\"; tmp.Format(new[]{\"aaa\",\"bbb\"}); // \"aaa-bbb\" IgnoreCaseEquals(String, String) 忽略大小写比较 声明 public static bool IgnoreCaseEquals(this string this, string value) 参数 类型 名称 描述 System.String this 源字符串 System.String value 需要进行比较的字符串 返回 类型 描述 System.Boolean IsEmail(String) 是否Email 声明 public static bool IsEmail(this string this) 参数 类型 名称 描述 System.String this 返回 类型 描述 System.Boolean IsLike(String, String) *通配符比较是否相似 (特殊字符 用 \\ 转义) 声明 public static bool IsLike(this string this, string pattern) 参数 类型 名称 描述 System.String this 源字符串，为 null 时返回 false System.String pattern 通配符表达式，为 null 时返回 false 返回 类型 描述 System.Boolean IsLower(String) 是否全部小写 声明 public static bool IsLower(this string this) 参数 类型 名称 描述 System.String this 源字符串 返回 类型 描述 System.Boolean IsNullOrWhiteSpace(String) 是否null或空白 声明 public static bool IsNullOrWhiteSpace(this string this) 参数 类型 名称 描述 System.String this 源字符串 返回 类型 描述 System.Boolean IsUpper(String) 是否全部大写 声明 public static bool IsUpper(this string this) 参数 类型 名称 描述 System.String this 源字符串 返回 类型 描述 System.Boolean IsUrl(String) 是否URL 声明 public static bool IsUrl(this string this) 参数 类型 名称 描述 System.String this 返回 类型 描述 System.Boolean Left(String, Int32) 从左侧返回指定长度的字符串 声明 public static string Left(this string this, int length) 参数 类型 名称 描述 System.String this System.Int32 length 返回 类型 描述 System.String 异常 类型 条件 System.ArgumentOutOfRangeException length 参数不允许小于0 RegexIsMatch(String, String, RegexOptions) 正则表达式 - 是否匹配 声明 public static bool RegexIsMatch(this string this, string pattern, RegexOptions regexOption = RegexOptions.None) 参数 类型 名称 描述 System.String this 源字符串 System.String pattern 正则表达式 System.Text.RegularExpressions.RegexOptions regexOption System.Text.RegularExpressions.MatchEvaluator 正则表达式选项，默认值：RegexOptions.None 返回 类型 描述 System.Boolean RegexMatch(String, String, RegexOptions) 正则表达式 - 单个匹配对象 声明 public static Match RegexMatch(this string this, string pattern, RegexOptions regexOption = RegexOptions.None) 参数 类型 名称 描述 System.String this 源字符串 System.String pattern 正则表达式 System.Text.RegularExpressions.RegexOptions regexOption System.Text.RegularExpressions.RegexOptions 正则表达式选项，默认值：RegexOptions.None 返回 类型 描述 System.Text.RegularExpressions.Match 单个匹配对象 RegexMatches(String, String, RegexOptions) 正则表达式 - 所有匹配对象 声明 public static MatchCollection RegexMatches(this string this, string pattern, RegexOptions regexOption = RegexOptions.None) 参数 类型 名称 描述 System.String this 源字符串 System.String pattern 正则表达式 System.Text.RegularExpressions.RegexOptions regexOption System.Text.RegularExpressions.RegexOptions 正则表达式选项，默认值：RegexOptions.None 返回 类型 描述 System.Text.RegularExpressions.MatchCollection 所有匹配对象 RegexReplace(String, String, String, RegexOptions) 正则表达式 - 替换字符串 声明 public static string RegexReplace(this string this, string pattern, string replacement, RegexOptions regexOption = RegexOptions.None) 参数 类型 名称 描述 System.String this 源字符串 System.String pattern 正则表达式 System.String replacement 替换字符串 System.Text.RegularExpressions.RegexOptions regexOption System.Text.RegularExpressions.RegexOptions 正则表达式选项，默认值：RegexOptions.None System.Text.RegularExpressions.RegexOptions 返回 类型 描述 System.String RegexReplace(String, String, MatchEvaluator) 正则表达式 - 替换字符串 声明 public static string RegexReplace(this string this, string pattern, MatchEvaluator evaluator) 参数 类型 名称 描述 System.String this 源字符串 System.String pattern 正则表达式 System.Text.RegularExpressions.MatchEvaluator evaluator System.Text.RegularExpressions.MatchEvaluator 委托表示的方法返回的字符串 返回 类型 描述 System.String RegexSplit(String, String, RegexOptions) 正则表达式 - 拆分字符串 声明 public static string[] RegexSplit(this string this, string pattern, RegexOptions regexOption = RegexOptions.None) 参数 类型 名称 描述 System.String this 源字符串 System.String pattern 正则表达式 System.Text.RegularExpressions.RegexOptions regexOption System.Text.RegularExpressions.RegexOptions 正则表达式选项，默认值：RegexOptions.None 返回 类型 描述 System.String [] Right(String, Int32) 从右侧返回指定长度的字符串 声明 public static string Right(this string this, int length) 参数 类型 名称 描述 System.String this System.Int32 length 返回 类型 描述 System.String 异常 类型 条件 System.ArgumentOutOfRangeException length 参数不允许小于0 ToBytes(String, Encoding) 转换为 byte 数组 声明 public static byte[] ToBytes(this string this, Encoding encoding = null) 参数 类型 名称 描述 System.String this 源字符串 System.Text.Encoding encoding 编码格式 默认 UTF8 返回 类型 描述 System.Byte [] ToXmlDocument(String) 转换为 XmlDocument 声明 public static XmlDocument ToXmlDocument(this string this) 参数 类型 名称 描述 System.String this 源字符串 返回 类型 描述 System.Xml.XmlDocument"
  },
  "api/Lett.Extensions.Exceptions.DataTableException.html": {
    "href": "api/Lett.Extensions.Exceptions.DataTableException.html",
    "title": "DataTableException 类 | Lett.Extensions website",
    "keywords": "DataTableException 类 继承 System.Object System.Exception DataTableException 实现 System.Runtime.Serialization.ISerializable 继承成员 System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) 命名空间 : Lett.Extensions.Exceptions 程序集 : Lett.Extensions.dll 语法 public class DataTableException : Exception, ISerializable 构造函数 DataTableException(String) 声明 public DataTableException(string message) 参数 类型 名称 描述 System.String message 实现 System.Runtime.Serialization.ISerializable 扩展方法 ObjectExtensions.IsDBNull(Object) ObjectExtensions.To<T>(Object) ObjectExtensions.To<T>(Object, Func<T>) ObjectExtensions.To<T>(Object, T) ObjectExtensions.IsAssignableFrom<T>(Object) ObjectExtensions.IsAssignableFrom(Object, Type) ObjectExtensions.As<T>(Object) ObjectExtensions.As<T>(Object, Func<T>) ObjectExtensions.As<T>(Object, T) ObjectExtensions.DeepClone<T>(T)"
  },
  "api/Lett.Extensions.TypeExtensions.html": {
    "href": "api/Lett.Extensions.TypeExtensions.html",
    "title": "TypeExtensions 类 | Lett.Extensions website",
    "keywords": "TypeExtensions 类 type 扩展方法 继承 System.Object TypeExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class TypeExtensions 方法 HasProperty(Type, String) 是否包含Property 声明 public static bool HasProperty(this Type this, string propertyName) 参数 类型 名称 描述 System.Type this System.String propertyName 属性名，忽略大小写 返回 类型 描述 System.Boolean"
  },
  "api/Lett.Extensions.DataRowExtensions.html": {
    "href": "api/Lett.Extensions.DataRowExtensions.html",
    "title": "DataRowExtensions 类 | Lett.Extensions website",
    "keywords": "DataRowExtensions 类 DataRow 扩展方法 继承 System.Object DataRowExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class DataRowExtensions 方法 Cell<T>(DataRow, String) 获取当前行中某个列的值 声明 public static T Cell<T>(this DataRow this, string columnName) where T : IConvertible 参数 类型 名称 描述 System.Data.DataRow this System.String columnName 列名 返回 类型 描述 T 类型参数 名称 描述 T Cell<T>(DataRow, String, T) 获取当前行中某个列的值 声明 public static T Cell<T>(this DataRow this, string columnName, T defaultValue) where T : IConvertible 参数 类型 名称 描述 System.Data.DataRow this System.String columnName 列名 T defaultValue 默认值 返回 类型 描述 T 类型参数 名称 描述 T Cell<T>(DataRow, String, Func<T>) 获取当前行中某个列的值 声明 public static T Cell<T>(this DataRow this, string columnName, Func<T> func) where T : IConvertible 参数 类型 名称 描述 System.Data.DataRow this System.String columnName 列名 System.Func <T> func 返回 类型 描述 T 类型参数 名称 描述 T ToEntity<T>(DataRow) 转换为实体 声明 public static T ToEntity<T>(this DataRow this) where T : class, new() 参数 类型 名称 描述 System.Data.DataRow this 返回 类型 描述 T 类型参数 名称 描述 T"
  },
  "api/Lett.Extensions.IntExtensions.html": {
    "href": "api/Lett.Extensions.IntExtensions.html",
    "title": "IntExtensions 类 | Lett.Extensions website",
    "keywords": "IntExtensions 类 int 扩展方法 - 比较 继承 System.Object IntExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class IntExtensions 方法 GetEnumDescription(Int32, Type) 获取对应枚举的描述 异常时 返回null 声明 public static string GetEnumDescription(this int this, Type enumType) 参数 类型 名称 描述 System.Int32 this System.Type enumType 枚举类型，枚举类型不存在时，返回空字符串 返回 类型 描述 System.String IsEven(Int32) 是否偶数 声明 public static bool IsEven(this int this) 参数 类型 名称 描述 System.Int32 this 返回 类型 描述 System.Boolean IsInRange(Int32, Int32, Int32) 是否在指定范围内 声明 public static bool IsInRange(this int this, int min, int max) 参数 类型 名称 描述 System.Int32 this System.Int32 min 最小值 System.Int32 max 最大值 返回 类型 描述 System.Boolean IsOdd(Int32) 是否奇数 声明 public static bool IsOdd(this int this) 参数 类型 名称 描述 System.Int32 this 返回 类型 描述 System.Boolean Times(Int32, Action) 执行次数操作，次数基于原 int 值 声明 public static void Times(this int this, Action action) 参数 类型 名称 描述 System.Int32 this 次数 System.Action action 执行的操作 Times(Int32, Action<Int32>) 执行次数操作，次数基于原 int 值 声明 public static void Times(this int this, Action<int> action) 参数 类型 名称 描述 System.Int32 this 次数 System.Action < System.Int32 > action 执行的操作(参数是从0开始的 index)"
  },
  "api/Lett.Extensions.html": {
    "href": "api/Lett.Extensions.html",
    "title": "Lett.Extensions 命名空间 | Lett.Extensions website",
    "keywords": "Lett.Extensions 命名空间 类 ArrayExtensions array 扩展方法 - 比较 BooleanExtensions bool 扩展方法 ByteExtensions Bytes 扩展方法 - 转换 DataColumnCollectionExtensions DataColumnCollection 扩展方法 DataRowExtensions DataRow 扩展方法 DataTableExtensions DataTable 扩展方法 DateTimeExtensions DateTime 扩展方法 - 转换 EnumExtensions Enum 扩展方法 ICollectionsExtensions ICollections 扩展方法 IEnumerableExtensions IEnumerable 扩展方法 - 比较 IntExtensions int 扩展方法 - 比较 LongExtensions long 扩展方法 - 比较 ObjectExtensions object 扩展方法 - 比较 StringExtensions string 扩展方法 - 比较 TypeExtensions type 扩展方法"
  },
  "api/Lett.Extensions.BooleanExtensions.html": {
    "href": "api/Lett.Extensions.BooleanExtensions.html",
    "title": "BooleanExtensions 类 | Lett.Extensions website",
    "keywords": "BooleanExtensions 类 bool 扩展方法 继承 System.Object BooleanExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class BooleanExtensions 方法 IfFalse(Boolean, Action) 结果为 False 时，执行方法 声明 public static void IfFalse(this bool this, Action action) 参数 类型 名称 描述 System.Boolean this 结果 System.Action action 执行的方法 IfFalse<T>(Boolean, T) 结果为 False 时，返回参数 (结果为 True 时，返回参数类型默认值) 声明 public static T IfFalse<T>(this bool this, T result) 参数 类型 名称 描述 System.Boolean this 结果 T result 参数 返回 类型 描述 T 类型参数 名称 描述 T 参数类型 IfTrue(Boolean, Action) 结果为 True 时，执行方法 声明 public static void IfTrue(this bool this, Action action) 参数 类型 名称 描述 System.Boolean this 结果 System.Action action 执行的方法 IfTrue<T>(Boolean, T) 结果为 True 时，返回参数 (结果为 False 时，返回参数类型默认值) 声明 public static T IfTrue<T>(this bool this, T result) 参数 类型 名称 描述 System.Boolean this 结果 T result 参数 返回 类型 描述 T 类型参数 名称 描述 T 参数类型"
  },
  "api/Lett.Extensions.ICollectionsExtensions.html": {
    "href": "api/Lett.Extensions.ICollectionsExtensions.html",
    "title": "ICollectionsExtensions 类 | Lett.Extensions website",
    "keywords": "ICollectionsExtensions 类 ICollections 扩展方法 继承 System.Object ICollectionsExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class ICollectionsExtensions 方法 AddIfNotContains<T>(ICollection<T>, T) 如果不包含，则添加 声明 public static void AddIfNotContains<T>(this ICollection<T> this, T item) 参数 类型 名称 描述 System.Collections.Generic.ICollection <T> this 集合 T item 项 类型参数 名称 描述 T 类型 AddIfNotContains<T>(ICollection<T>, ICollection<T>) 如果不包含，则添加 声明 public static void AddIfNotContains<T>(this ICollection<T> this, ICollection<T> items) 参数 类型 名称 描述 System.Collections.Generic.ICollection <T> this 集合 System.Collections.Generic.ICollection <T> items 项集合 类型参数 名称 描述 T 类型"
  },
  "api/Lett.Extensions.DataTableExtensions.html": {
    "href": "api/Lett.Extensions.DataTableExtensions.html",
    "title": "DataTableExtensions 类 | Lett.Extensions website",
    "keywords": "DataTableExtensions 类 DataTable 扩展方法 继承 System.Object DataTableExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class DataTableExtensions 方法 ColumnsEnumerable(DataTable) 获取DataColumn可枚举对象 声明 public static IEnumerable<DataColumn> ColumnsEnumerable(this DataTable this) 参数 类型 名称 描述 System.Data.DataTable this 返回 类型 描述 System.Collections.Generic.IEnumerable < System.Data.DataColumn > FirstRow(DataTable) 获取首行 声明 public static DataRow FirstRow(this DataTable this) 参数 类型 名称 描述 System.Data.DataTable this 返回 类型 描述 System.Data.DataRow 异常 类型 条件 DataTableException GetColumnDataType(DataTable, Int32) 获取Column的数据类型 声明 public static Type GetColumnDataType(this DataTable this, int index) 参数 类型 名称 描述 System.Data.DataTable this System.Int32 index 索引 返回 类型 描述 System.Type 异常 类型 条件 DataTableException GetColumnDataType(DataTable, String) 获取Column的数据类型 声明 public static Type GetColumnDataType(this DataTable this, string columnName) 参数 类型 名称 描述 System.Data.DataTable this System.String columnName 列名 返回 类型 描述 System.Type 异常 类型 条件 DataTableException HasRows(DataTable) 是否存在数据行 声明 public static bool HasRows(this DataTable this) 参数 类型 名称 描述 System.Data.DataTable this 返回 类型 描述 System.Boolean LastRow(DataTable) 获取末行 声明 public static DataRow LastRow(this DataTable this) 参数 类型 名称 描述 System.Data.DataTable this 返回 类型 描述 System.Data.DataRow 异常 类型 条件 DataTableException RowsEnumerable(DataTable) 获取DataRow可枚举对象 声明 public static IEnumerable<DataRow> RowsEnumerable(this DataTable this) 参数 类型 名称 描述 System.Data.DataTable this 返回 类型 描述 System.Collections.Generic.IEnumerable < System.Data.DataRow > ToEntityList<T>(DataTable) 转换为实体列表 声明 public static List<T> ToEntityList<T>(this DataTable this) where T : class, new() 参数 类型 名称 描述 System.Data.DataTable this 返回 类型 描述 System.Collections.Generic.List <T> 类型参数 名称 描述 T"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Lett.Extensions website",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Lett.Extensions.DateTimeExtensions.html": {
    "href": "api/Lett.Extensions.DateTimeExtensions.html",
    "title": "DateTimeExtensions 类 | Lett.Extensions website",
    "keywords": "DateTimeExtensions 类 DateTime 扩展方法 - 转换 继承 System.Object DateTimeExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class DateTimeExtensions 方法 EndOfDay(DateTime) 获取 DateTime 的结束 (year-month-day 23:59:59.999) 声明 public static DateTime EndOfDay(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.DateTime EndOfWeek(DateTime, DayOfWeek) 获取本周结束的 DateTime (year-month-day 23:59:59.999) 声明 public static DateTime EndOfWeek(this DateTime this, DayOfWeek startOfWeek) 参数 类型 名称 描述 System.DateTime this System.DayOfWeek startOfWeek 设置每周的起始 返回 类型 描述 System.DateTime GetTotalDays(DateTime) 获取时间戳的日表示 声明 public static double GetTotalDays(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.Double GetTotalHours(DateTime) 获取时间戳的小时表示 声明 public static double GetTotalHours(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.Double GetTotalMilliseconds(DateTime) 获取时间戳的毫秒表示 声明 public static double GetTotalMilliseconds(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.Double GetTotalMinutes(DateTime) 获取时间戳的分钟表示 声明 public static double GetTotalMinutes(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.Double GetTotalSeconds(DateTime) 获取时间戳的秒表示 声明 public static double GetTotalSeconds(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.Double SetTime(DateTime, Int32, Int32, Int32, Int32) 设置DateTime的time部分 声明 public static DateTime SetTime(this DateTime this, int hour, int minute, int second, int millisecond = 0) 参数 类型 名称 描述 System.DateTime this System.Int32 hour 小时 (0-23) System.Int32 minute 分钟 (0-59) System.Int32 second 秒 (0-59) System.Int32 millisecond 毫秒 (0-999) 默认0 返回 类型 描述 System.DateTime 异常 类型 条件 System.ArgumentOutOfRangeException en:Hour, Minute, and Second parameters describe an un-representable DateTime. (小时、分钟和秒参数描述了一个无法表示的日期时间。) System.ArgumentOutOfRangeException Valid values are between 0 and 999, inclusive. (millisecond 的有效值在0和999之间。) StartOfDay(DateTime) 获取 DateTime 的开始 (year-month-day 00:00:00.000) 声明 public static DateTime StartOfDay(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.DateTime StartOfWeek(DateTime, DayOfWeek) 获取本周开始 DateTime (year-month-day 00:00:00.000) 声明 public static DateTime StartOfWeek(this DateTime this, DayOfWeek startOfWeek) 参数 类型 名称 描述 System.DateTime this System.DayOfWeek startOfWeek 设置每周的起始 返回 类型 描述 System.DateTime ToString_Base(DateTime) 格式化为 yyyy-MM-dd HH:mm:ss 声明 public static string ToString_Base(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_Day(DateTime) 格式化为 yyyy-MM-dd 声明 public static string ToString_Day(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_Full(DateTime) 格式化为 yyyy-MM-dd HH:mm:ss.fffffff 声明 public static string ToString_Full(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_Month(DateTime) 格式化为 yyyy-MM 声明 public static string ToString_Month(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_ShortDay(DateTime) 格式化为 yy-M-d 声明 public static string ToString_ShortDay(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_ShortMonth(DateTime) 格式化为 yy-M 声明 public static string ToString_ShortMonth(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_ShortTime(DateTime) 格式化为 hh:mm:ss tt eg. 11:23:02 PM 声明 public static string ToString_ShortTime(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_ShortYear(DateTime) 格式化为 yy 声明 public static string ToString_ShortYear(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_Time(DateTime) 格式化为 HH:mm:ss 声明 public static string ToString_Time(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String ToString_Year(DateTime) 格式化为 yyyy 声明 public static string ToString_Year(this DateTime this) 参数 类型 名称 描述 System.DateTime this 返回 类型 描述 System.String"
  },
  "api/Lett.Extensions.ArrayExtensions.html": {
    "href": "api/Lett.Extensions.ArrayExtensions.html",
    "title": "ArrayExtensions 类 | Lett.Extensions website",
    "keywords": "ArrayExtensions 类 array 扩展方法 - 比较 继承 System.Object ArrayExtensions 继承成员 System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() 命名空间 : Lett.Extensions 程序集 : Lett.Extensions.dll 语法 public static class ArrayExtensions 方法 ClearAll(Array) 全部清除 声明 public static void ClearAll(this Array this) 参数 类型 名称 描述 System.Array this 当前 Array ClearAll<T>(T[]) 全部清除 声明 public static void ClearAll<T>(this T[] this) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 类型参数 名称 描述 T ContainsIndex(Array, Int32) 是否包含索引 声明 public static bool ContainsIndex(this Array this, int index) 参数 类型 名称 描述 System.Array this 当前Array System.Int32 index 返回 类型 描述 System.Boolean ContainsIndex<T>(T[], Int32) 是否包含索引 声明 public static bool ContainsIndex<T>(this T[] this, int index) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Int32 index 索引 返回 类型 描述 System.Boolean 类型参数 名称 描述 T Find<T>(T[], Predicate<T>) 返回数组中的第一个匹配元素 声明 public static T Find<T>(this T[] this, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 T 类型参数 名称 描述 T 异常 类型 条件 System.ArgumentNullException match is null. FindAll<T>(T[], Predicate<T>) 返回数组中所有匹配的元素 声明 public static T[] FindAll<T>(this T[] this, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 T[] 类型参数 名称 描述 T 异常 类型 条件 System.ArgumentNullException match is null. FindIndex<T>(T[], Int32, Int32, Predicate<T>) 返回数组中的第一个匹配元素的索引 声明 public static int FindIndex<T>(this T[] this, int startIndex, int count, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Int32 startIndex 开始的索引 System.Int32 count 要搜索的部分中的元素数 System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 System.Int32 类型参数 名称 描述 T FindIndex<T>(T[], Int32, Predicate<T>) 返回数组中的第一个匹配元素的索引 声明 public static int FindIndex<T>(this T[] this, int startIndex, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Int32 startIndex 开始的索引 System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 System.Int32 类型参数 名称 描述 T FindIndex<T>(T[], Predicate<T>) 返回数组中的第一个匹配元素的索引 声明 public static int FindIndex<T>(this T[] this, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 System.Int32 类型参数 名称 描述 T 异常 类型 条件 System.ArgumentNullException match is null. FindLast<T>(T[], Predicate<T>) 返回数组中的最后一个匹配元素 声明 public static T FindLast<T>(this T[] this, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 T 类型参数 名称 描述 T 异常 类型 条件 System.ArgumentNullException match is null. FindLastIndex<T>(T[], Int32, Int32, Predicate<T>) 返回数组中的最后一个匹配元素的索引 声明 public static int FindLastIndex<T>(this T[] this, int startIndex, int count, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Int32 startIndex 开始的索引 System.Int32 count 要搜索的部分中的元素数 System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 System.Int32 类型参数 名称 描述 T FindLastIndex<T>(T[], Int32, Predicate<T>) 返回数组中的最后一个匹配元素的索引 声明 public static int FindLastIndex<T>(this T[] this, int startIndex, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Int32 startIndex 开始的索引 System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 System.Int32 类型参数 名称 描述 T FindLastIndex<T>(T[], Predicate<T>) 返回数组中的最后一个匹配元素的索引 声明 public static int FindLastIndex<T>(this T[] this, Predicate<T> match) 参数 类型 名称 描述 T[] this System.Predicate <T> match 用于定义要搜索的元素的条件的谓词 返回 类型 描述 System.Int32 类型参数 名称 描述 T ForEach<T>(T[], Action<T>) 对指定数组的每个元素执行指定操作 声明 public static void ForEach<T>(this T[] this, Action<T> action) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Action <T> action 指定操作 T: 数组元素 类型参数 名称 描述 T ForEach<T>(T[], Action<Int32, T>) 对指定数组的每个元素执行指定操作 声明 public static void ForEach<T>(this T[] this, Action<int, T> action) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Action < System.Int32 , T> action 指定操作 int: 数组元素的索引 T: 数组元素 类型参数 名称 描述 T Reverse(Array) 反转数组中元素的顺序 声明 public static void Reverse(this Array this) 参数 类型 名称 描述 System.Array this 当前 Array Reverse(Array, Int32, Int32) 反转数组中元素的顺序 声明 public static void Reverse(this Array this, int index, int length) 参数 类型 名称 描述 System.Array this 当前 Array System.Int32 index 要反转的部分的起始索引 System.Int32 length 要反转的部分中的元素数 Reverse<T>(T[]) 反转数组中元素的顺序 声明 public static void Reverse<T>(this T[] this) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 类型参数 名称 描述 T Reverse<T>(T[], Int32, Int32) 反转数组中元素的顺序 声明 public static void Reverse<T>(this T[] this, int index, int length) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Int32 index 要反转的部分的起始索引 System.Int32 length 要反转的部分中的元素数 类型参数 名称 描述 T Sort(Array) 排序 声明 public static void Sort(this Array this) 参数 类型 名称 描述 System.Array this 当前 Array Sort(Array, IComparer) 排序 声明 public static void Sort(this Array this, IComparer comparer) 参数 类型 名称 描述 System.Array this 当前 Array System.Collections.IComparer comparer 比较元素时使用的 IComparer<T> 泛型接口实现；如果为 null，则使用每个元素的 IComparable<T> 泛型接口实现 Sort(Array, Int32, Int32) 排序 声明 public static void Sort(this Array this, int index, int length) 参数 类型 名称 描述 System.Array this 当前 Array System.Int32 index 排序范围的起始索引 System.Int32 length 排序范围内的元素数 Sort(Array, Int32, Int32, IComparer) 排序 声明 public static void Sort(this Array this, int index, int length, IComparer comparer) 参数 类型 名称 描述 System.Array this 当前 Array System.Int32 index 排序范围的起始索引 System.Int32 length 排序范围内的元素数 System.Collections.IComparer comparer 比较元素时使用的 IComparer<T> 泛型接口实现；如果为 null，则使用每个元素的 IComparable<T> 泛型接口实现 Sort<T>(T[]) 排序 声明 public static void Sort<T>(this T[] this) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 类型参数 名称 描述 T Sort<T>(T[], IComparer) 排序 声明 public static void Sort<T>(this T[] this, IComparer comparer) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Collections.IComparer comparer 比较元素时使用的 IComparer<T> 泛型接口实现；如果为 null，则使用每个元素的 IComparable<T> 泛型接口实现 类型参数 名称 描述 T Sort<T>(T[], Int32, Int32) 排序 声明 public static void Sort<T>(this T[] this, int index, int length) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Int32 index 排序范围的起始索引 System.Int32 length 排序范围内的元素数 类型参数 名称 描述 T Sort<T>(T[], Int32, Int32, IComparer) 排序 声明 public static void Sort<T>(this T[] this, int index, int length, IComparer comparer) 参数 类型 名称 描述 T[] this 当前 Array 泛型接口 System.Int32 index 排序范围的起始索引 System.Int32 length 排序范围内的元素数 System.Collections.IComparer comparer 比较元素时使用的 IComparer<T> 泛型接口实现；如果为 null，则使用每个元素的 IComparable<T> 泛型接口实现 类型参数 名称 描述 T"
  },
  "index.html": {
    "href": "index.html",
    "title": "How to use | Lett.Extensions website",
    "keywords": "Common C# extension methods collection NuGet: https://www.nuget.org/packages/Lett.Extensions/ GitHub: https://github.com/viacooky/Lett.Extensions/ How to use Package Manager Install-Package Lett.Extensions Nuget cli nuget install Lett.Extensions .Net cli dotnet add package Lett.Extensions Extension Methods System.Array System.Boolean System.Byte System.Collections.Generic System.Data System.DateTime System.Enum System.Int32 System.Int32 System.Object System.String System.Type Change Logs 0.2.0 (2019-05-21) Features / 新增功能 增加 IEnumerable<T> 扩展方法： ContainsAny(IEnumerable<T> items) 是否包含任一元素 ContainsAll(IEnumerable<T> items) 是否包含全部元素 增加 DateTime 扩展方法: SetTime(int hour, int minute, int second, int millisecond = 0) 设置 DateTime 的 time 部分 StartOfDay() 获取 DateTime 的开始 (year-month-day 00:00:00.000) EndOfDay() 获取 DateTime 的结束 (year-month-day 23:59:59.999) StartOfWeek() 获取本周开始的 DateTime (year-month-day 00:00:00.000) EndOfWeek() 获取本周结束的 DateTime (year-month-day 23:59:59.999) Changed / 变更 移除 DateTime 扩展方法: RemoveTimePart() 移除时间部分 0.1.9 (2019-05-18) Features / 新增功能 增加 DateTime 扩展方法: RemoveTimePart() 移除时间部分 增加 Array 扩展方法 ClearAll() 全部清除 ContainsIndex(int index) 是否包含索引 Sort() 排序 Reverse() 反转 Find() 返回数组中的第一个匹配元素 FindLast() 返回数组中的最后一个匹配元素 FindAll() 返回数组中所有匹配的元素 FindIndex() 返回数组中的第一个匹配元素的索引 FindLastIndex() 返回数组中的最后一个匹配元素的索引 ForEach() 对指定数组的每个元素执行指定操作 0.1.8 (2019-05-13) Features / 新增功能 增加 string 扩展方法 增加 byte[] 扩展方法 增加 ICollection 扩展方法 增加 bool 扩展方法 增加 int 扩展方法 增加 long 扩展方法 Features / 新增功能 增加 string 扩展方法 增加 byte[] 扩展方法 增加 ICollection 扩展方法 增加 bool 扩展方法 增加 int 扩展方法 增加 long 扩展方法 Changed / 变更 对扩展方法类名进行规范重命名 more..."
  },
  "changelog/index.html": {
    "href": "changelog/index.html",
    "title": "Change log / 更新日志 | Lett.Extensions website",
    "keywords": "Change log / 更新日志 0.2.0 (2019-05-21) Features / 新增功能 增加 IEnumerable<T> 扩展方法： ContainsAny(IEnumerable<T> items) 是否包含任一元素 ContainsAll(IEnumerable<T> items) 是否包含全部元素 增加 DateTime 扩展方法: SetTime(int hour, int minute, int second, int millisecond = 0) 设置 DateTime 的 time 部分 StartOfDay() 获取 DateTime 的开始 (year-month-day 00:00:00.000) EndOfDay() 获取 DateTime 的结束 (year-month-day 23:59:59.999) StartOfWeek() 获取本周开始的 DateTime (year-month-day 00:00:00.000) EndOfWeek() 获取本周结束的 DateTime (year-month-day 23:59:59.999) Changed / 变更 移除 DateTime 扩展方法: RemoveTimePart() 移除时间部分 0.1.9 (2019-05-18) Features / 新增功能 增加 DateTime 扩展方法: RemoveTimePart() 移除时间部分 增加 Array 扩展方法 ClearAll() 全部清除 ContainsIndex(int index) 是否包含索引 Sort() 排序 Reverse() 反转 Find() 返回数组中的第一个匹配元素 FindLast() 返回数组中的最后一个匹配元素 FindAll() 返回数组中所有匹配的元素 FindIndex() 返回数组中的第一个匹配元素的索引 FindLastIndex() 返回数组中的最后一个匹配元素的索引 ForEach() 对指定数组的每个元素执行指定操作 0.1.8 (2019-05-13) Features / 新增功能 增加 string 扩展方法: ToBytes(Encoding encoding = null) 转换为 byte 数组 IsLike(string pattern) *通配符比较是否相似 (特殊字符 用 \\ 转义) RegexIsMatch(string pattern) 正则表达式 - 是否匹配 RegexMatches(string pattern) 正则表达式匹配 - 所有匹配对象 RegexMatch(string pattern) 正则表达式匹配 - 单个匹配对象 RegexSplit(string pattern) 正则表达式拆分字符串 RegexReplace(string pattern, string replacement) 正则表达式替换字符串 RegexReplace(string pattern, MatchEvaluator evaluator) 正则表达式替换字符串 增加 byte[] 扩展方法: ToString(Encoding encoding) 转换为字符串 增加 ICollection 扩展方法: AddIfNotContains<T>(@this, T item) 如果不包含，则添加 AddIfNotContains<T>(ICollection<T> items) 如果不包含，则添加 增加 bool 扩展方法: IfTrue(Action action) 结果为 True 时，执行方法 IfTrue(T result) 结果为 True 时，返回参数 (结果为 False 时，返回参数类型默认值) IfFalse(Action action) 结果为 False 时，执行方法 IfTrue(T result) 结果为 False 时，返回参数 (结果为 True 时，返回参数类型默认值) 增加 int 扩展方法: IsEven() 是否偶数 IsOdd() 是否奇数 Times(Action action) 执行次数操作，次数基于原 int 值 Times(Action<int> action) 执行次数操作，次数基于原 int 值 IsInRange(int min, int max) 是否在指定范围内 增加 long 扩展方法: IsEven() 是否偶数 IsOdd() 是否奇数 Times(Action action) 执行次数操作，次数基于原 int 值 Times(Action<long> action) 执行次数操作，次数基于原 int 值 IsInRange(long min, long max) 是否在指定范围内 Changed / 变更 对扩展方法类名进行规范重命名 统一命名空间 Lett.Extensions.Exceptions IEnumerableExtensions IEnumerable 扩展方法 DataColumnCollectionExtensions DataColumnCollection 扩展方法 DataRowExtensions DataRow 扩展方法 DataTableExtensions DataTable 扩展方法 DateTimeExtensions DateTime 扩展方法 EnumExtensions Enum 扩展方法 IntExtensions int 扩展方法 ObjectExtensions object 扩展方法 StringExtensions string 扩展方法 TypeExtensions type 扩展方法 类名变更： LettExtensionsDataTableException -> DataTableException 0.1.7 (2019-04-28) Features / 新增功能 增加 System.String 拓展方法 Format(object[] args) 格式化 Left(int length) 从左侧返回指定长度的字符串 Right(int length) 从右侧返回指定长度的字符串 0.1.6 (2019-04-25) Features / 新增功能 增加 String.IsNullOrWhiteSpace() 是否 null 或空白 增加 String.ContainsAll() 是否全部包含，默认不区分大小写 增加 String.ContainsAny() 是否包含任意一个，默认不区分大小写 0.1.5 (2019-04-24) Features / 新增功能 增加 DataTable DataRow 转换实体方法 增加 DataColumnCollectionTest.AddRange 方法 获取 DataColumn 可枚举对象 ColumnsEnumerable() 获取 Column 的数据类型 GetColumnDataType(string columnName) 获取 Column 的数据类型 GetColumnDataType(int index) Changed / 变更 DataRow.Cell<T>() 系列方法，泛型约定调整为 实现了 IConvertible 接口的类型 Object.To<T>() 方法的泛型约定调整为 实现了 IConvertible 接口的类型 实现了 IConvertible 接口的类型 如：Boolean, Byte, Char, DateTime, System.DBNull, Decimal, Double, System.Enum, Int16, Int32, Int64, SByte, Single, String, UInt16, UInt32, UInt64 等 0.1.4 (2019-04-14) Features / 新增功能 增加 Object.IsDBNull 方法 Refactored / 优化重构 调整 Int32.GetEnumDescription()方法位置，使用无感知 X.X.X (2019-04-13) Features / 新增功能 Changed / 变更 Fixed / 修复 Removed / 删除 Deprecated / 即将删除 Refactored / 优化重构"
  }
}